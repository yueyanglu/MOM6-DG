# Executable targets: build/compiler/mode/mom6_memory/mom6_configuration/MOM6
#
#   compiler = gnu, intel, pgi, cray, ...
#   mode = repro, debug, coverage, ...
#   If mom6_memory = dynamic_nonsymmetric or dynamic_symmetric
#     mom6_configuration = ocean_only, ice_ocean_SIS, ice_ocean_SIS2, land_ice_ocean_LM3_SIS2, coupled_AM2_LM3_SIS, coupled_AM2_LM3_SIS2
#   If mom6_memory = static
#     mom6_configuration = ocean_only/DOME ocean_only/benchmark ocean_only/double_gyre ...

# Include local configs if present
-include config.mk

CONFIGS ?= MOM6-examples
BUILD = build
MPIRUN ?= srun -mblock --exclusive
SHELL = bash
COMPILERS ?= gnu intel pgi cray
LOG = > log

all:
	time make -f MRS/Makefile.coverage gnu_all -s -j
	time make -f MRS/Makefile.coverage intel_all -s -j
	time make -f MRS/Makefile.coverage pgi_all -s -j

# Converts a path a/b/c to a list "a b c"
slash_to_list = $(subst /, ,$(1))
# Replaces a path a/b/c with ../../../
noop =
rel_path = $(subst $(noop) $(noop),,$(patsubst %,../,$(call slash_to_list,$(1))))

manifest.mk:
	bash MRS/generate_manifest.sh $(CONFIGS) > manifest.mk

# Running
include manifest.mk

MODE ?= coverage
MEMORY ?= dynamic_nonsymmetric

test_name = $(subst /,_,$(subst -,_,$(subst .,_,$(subst $(CONFIGS)/,,$(subst ocean.stats.,,$(1))))))
mom6_objects = $(subst ice_ocean_SIS2,mom6,$(1))

# Dynamic pathway for building ocean.stats.* running with NPES
define run-dynamic-model
$(CONFIGS)/$(2)/%/ocean.stats.$(1): $(BUILD)/$(1)/$$(MODE)/$$(MEMORY)/$(2)/MOM6 $(CONFIGS)/$(2)/%/input.nml $(CONFIGS)/$(2)/%/MOM_input $(CONFIGS)/$(2)/%/MOM_override
	echo $(BUILD)/$(1)/$$(MODE)/$$(MEMORY)/$(2)/MOM6"("$$(NPES)")" "=>" $$@
	-rm -f $(BUILD)/$(1)/$$(MODE)/$$(MEMORY)/$$(call mom6_objects,$(2))/*.gcda
	cd $$(@D) && rm -rf Depth_list.nc CPU_stats.$(1) time_stamp.out $$(@F) RESTART FAIL && mkdir RESTART
	cd $$(@D) && tic=$$$$(date +%s) && \
	(OMP_NUM_THREADS=1 KMP_STACKSIZE=512m NC_BLKSZ=1M time $(MPIRUN) -n $$(NPES) $$(call rel_path,$$(@D))$(BUILD)/$(1)/$$(MODE)/$$(MEMORY)/$(2)/MOM6 > log.$(1).out || touch FAIL;) \
	2>&1 | egrep -v "ing coupler_init| initializ|ing " | sed 's,^,$$@: ,' ; toc=$$$$(date +%s) ; echo $$$$(($$$$toc-$$$$tic)) > walltime.$(1).out
	cd $$(@D); (time $$(call rel_path,$$(@D))$(BUILD)/lcov/bin/lcov -q -t $$(call test_name,$$@) -c -d $$(call rel_path,$$(@D))$(BUILD)/$(1)/$$(MODE)/$$(MEMORY)/$$(call mom6_objects,$(2)) -o lcov.info &> /dev/null) &> lcov.log
	@test -f $$(@D)/FAIL && exit 9 || true
endef
$(foreach c,$(COMPILERS),$(foreach o,ocean_only ice_ocean_SIS2 land_ice_ocean_LM3_SIS2 coupled_AM2_LM3_SIS coupled_AM2_LM3_SIS2,$(eval $(call run-dynamic-model,$(c),$(o)))))

define stats-files
$$(shell grep " NPES" manifest.mk | grep -v ignore |  grep $(1) | sed 's/%:.*/$(2)/')
endef

# e.g. gnu_ocean_only, ..., gnu_all
define generate-targets
MOM6-examples/ocean_only/circle_obcs/ocean.stats.$(1): MEMORY=dynamic_symmetric
$(1)_ocean_only: $(call stats-files,ocean_only,$(1))
$(1)_ice_ocean_SIS2: $(call stats-files,ice_ocean_SIS2,$(1))
$(1)_land_ice_ocean_LM3_SIS2: $(call stats-files,land_ice_ocean_LM3_SIS2,$(1))
$(1)_coupled_AM2_LM3_SIS: $(call stats-files,coupled_AM2_LM3_SIS/,$(1))
$(1)_coupled_AM2_LM3_SIS2: $(call stats-files,coupled_AM2_LM3_SIS2,$(1))
$(1)_all: $(call stats-files,/,$(1))
endef
$(foreach c,$(COMPILERS),$(eval $(call generate-targets,$(c))))

coverage:
	$(BUILD)/lcov/bin/lcov `find $(CONFIGS)/[oilc]* -name lcov.info -exec echo -a {} \;` -o $(CONFIGS)/src/MOM6/lcov.info

clean_gnu:
	find $(CONFIGS) -name "ocean.stats.gnu" -exec rm {} \;
clean_intel:
	find $(CONFIGS) -name "ocean.stats.intel" -exec rm {} \;
clean_pgi:
	find $(CONFIGS) -name "ocean.stats.pgi" -exec rm {} \;
clean_all: clean_gnu clean_intel clean_pgi
clean:
	find $(CONFIGS) -name "*.out" -exec rm {} \;
	find $(CONFIGS) -name "lcov.info" -exec rm {} \;
